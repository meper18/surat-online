/**
 * Conditional Display Styles
 * CSS for elements with conditional display functionality
 */

/* Base conditional display styles */
.conditional-display {
    transition: all 0.3s ease;
}

/* Hidden state */
.conditional-display[style*="display: none"] {
    opacity: 0;
    transform: translateY(-10px);
}

/* Visible state */
.conditional-display[style*="display: block"] {
    opacity: 1;
    transform: translateY(0);
}

/* Animation classes for JavaScript control */
.conditional-display.fade-in {
    animation: conditionalFadeIn 0.3s ease forwards;
}

.conditional-display.fade-out {
    animation: conditionalFadeOut 0.3s ease forwards;
}

@keyframes conditionalFadeIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
        max-height: 0;
        padding-top: 0;
        padding-bottom: 0;
        margin-top: 0;
        margin-bottom: 0;
    }
    to {
        opacity: 1;
        transform: translateY(0);
        max-height: 500px;
        padding-top: initial;
        padding-bottom: initial;
        margin-top: initial;
        margin-bottom: initial;
    }
}

@keyframes conditionalFadeOut {
    from {
        opacity: 1;
        transform: translateY(0);
        max-height: 500px;
        padding-top: initial;
        padding-bottom: initial;
        margin-top: initial;
        margin-bottom: initial;
    }
    to {
        opacity: 0;
        transform: translateY(-10px);
        max-height: 0;
        padding-top: 0;
        padding-bottom: 0;
        margin-top: 0;
        margin-bottom: 0;
    }
}

/* Smooth height transitions */
.conditional-display {
    overflow: hidden;
}

/* Ensure proper spacing when elements are shown/hidden */
.conditional-display + .conditional-display {
    margin-top: 0;
}

.conditional-display.show + .conditional-display.show {
    margin-top: 1rem;
}

/* Special styling for nested conditional elements */
.conditional-display .conditional-display {
    margin-left: 1rem;
    border-left: 2px solid #e9ecef;
    padding-left: 1rem;
}

/* Focus states for conditional elements */
.conditional-display:focus-within {
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    border-radius: 0.375rem;
}

/* Loading state for conditional elements */
.conditional-display.loading {
    opacity: 0.6;
    pointer-events: none;
}

.conditional-display.loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    margin: -10px 0 0 -10px;
    border: 2px solid #f3f3f3;
    border-top: 2px solid #007bff;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    z-index: 10;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}